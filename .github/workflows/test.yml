name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

env:
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # Private key from GitHub Secrets
  EC2_HOST_DNS: ${{ secrets.HOST_DNS }}  # EC2 Public DNS or IP
  EC2_USER: ${{ secrets.USERNAME }}  # EC2 Username, e.g., 'ubuntu'

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use GitHub-hosted runner (Ubuntu)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up SSH and connect to EC2
      - name: Set up SSH and connect to EC2
        run: |
          # Create .ssh directory and set correct permissions
          mkdir -p ~/.ssh
          
          # Write the EC2 private key from the secret into a file
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add EC2 host to known_hosts to avoid authenticity warnings
          ssh-keyscan -H $EC2_HOST_DNS >> ~/.ssh/known_hosts

          # Test SSH connection (optional but helpful for debugging)
          ssh -v -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST_DNS "echo 'SSH connection successful'"

      # Step 3: Deploy files to EC2 using rsync
      - name: Deploy files to EC2
        run: |
          # Use rsync to copy the files from the repository to the EC2 instance
          rsync -avz --exclude='.git' ./ $EC2_USER@$EC2_HOST_DNS:/home/$EC2_USER/

          # Run deployment commands on the EC2 instance
          ssh -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST_DNS << EOF
            cd /home/$EC2_USER
            sudo chown -R www-data:www-data /home/$EC2_USER
            sudo chmod -R 755 /home/$EC2_USER

            # Update and install necessary packages
            sudo apt-get update -y
            pwd
            echo "Deployment completed successfully!"
          EOF
